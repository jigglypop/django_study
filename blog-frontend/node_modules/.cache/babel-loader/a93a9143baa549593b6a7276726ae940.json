{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\27_UD\\\\blog\\\\blog-frontend\\\\src\\\\components\\\\posts\\\\PostList.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport Button from '../common/Button';\nimport palette from '../../lib/styles/palette';\nimport SubInfo from '../common/SubInfo';\nimport Tags from '../common/Tags';\nimport { Link } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport GridList from '@material-ui/core/GridList';\nconst PostListBlock = styled(Responsive)`\n  margin-top: 3rem;\n`;\nconst WritePostButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  margin-bottom: 3rem;\n`;\nconst PostItemBlock = styled.div`\n  width: 200px;\n`;\nconst useStyles = makeStyles();\n\nconst PostItem = ({\n  post\n}) => {\n  const classes = useStyles();\n  const bull = React.createElement(\"span\", {\n    className: classes.bullet,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"\\u2022\");\n  const publishedDate = post.publishedDate,\n        user = post.user,\n        tags = post.tags,\n        title = post.title,\n        body = post.body,\n        _id = post._id;\n  return React.createElement(Card, {\n    className: classes.card,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(CardContent, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.title,\n    color: \"textSecondary\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Word of the Day\"), React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"be\", bull, \"nev\", bull, \"o\", bull, \"lent\"), React.createElement(Typography, {\n    className: classes.pos,\n    color: \"textSecondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"adjective\"), React.createElement(Typography, {\n    variant: \"body2\",\n    component: \"p\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"well meaning and kindly.\", React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), '\"a benevolent smile\"')), React.createElement(CardActions, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"small\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Learn More\")));\n};\n\nconst PostList = ({\n  posts,\n  loading,\n  error,\n  showWriteButton\n}) => {\n  if (error) {\n    return React.createElement(PostListBlock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\");\n  }\n\n  return React.createElement(PostItemBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(GridList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, !loading && posts && React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, posts.map(post => React.createElement(PostItem, {\n    post: post,\n    key: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  })))));\n};\n\nexport default PostList;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/27_UD/blog/blog-frontend/src/components/posts/PostList.js"],"names":["React","styled","Responsive","Button","palette","SubInfo","Tags","Link","makeStyles","Card","CardActions","CardContent","Typography","GridList","PostListBlock","WritePostButtonWrapper","div","PostItemBlock","useStyles","PostItem","post","classes","bull","bullet","publishedDate","user","tags","title","body","_id","card","pos","PostList","posts","loading","error","showWriteButton","map"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport Button from '../common/Button';\r\nimport palette from '../../lib/styles/palette';\r\nimport SubInfo from '../common/SubInfo';\r\nimport Tags from '../common/Tags';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport GridList from '@material-ui/core/GridList';\r\n\r\nconst PostListBlock = styled(Responsive)`\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst WritePostButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst PostItemBlock = styled.div`\r\n  width: 200px;\r\n`;\r\nconst useStyles = makeStyles();\r\n\r\nconst PostItem = ({ post }) => {\r\n  const classes = useStyles();\r\n  const bull = <span className={classes.bullet}>•</span>;\r\n  const { publishedDate, user, tags, title, body, _id } = post;\r\n  return (\r\n    <Card className={classes.card}>\r\n      <CardContent>\r\n        <Typography\r\n          className={classes.title}\r\n          color=\"textSecondary\"\r\n          gutterBottom\r\n        >\r\n          Word of the Day\r\n        </Typography>\r\n        <Typography variant=\"h5\" component=\"h2\">\r\n          be{bull}nev{bull}o{bull}lent\r\n        </Typography>\r\n        <Typography className={classes.pos} color=\"textSecondary\">\r\n          adjective\r\n        </Typography>\r\n        <Typography variant=\"body2\" component=\"p\">\r\n          well meaning and kindly.\r\n          <br />\r\n          {'\"a benevolent smile\"'}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n        <Button size=\"small\">Learn More</Button>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst PostList = ({ posts, loading, error, showWriteButton }) => {\r\n  if (error) {\r\n    return <PostListBlock>에러가 발생했습니다.</PostListBlock>;\r\n  }\r\n  return (\r\n    <PostItemBlock>\r\n      <GridList>\r\n        {!loading && posts && (\r\n          <div>\r\n            {posts.map(post => (\r\n              <PostItem post={post} key={post._id} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </GridList>\r\n    </PostItemBlock>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"]},"metadata":{},"sourceType":"module"}