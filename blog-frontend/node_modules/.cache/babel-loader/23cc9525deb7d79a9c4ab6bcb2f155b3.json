{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\vote\\\\Vote\\\\blog-frontend\\\\src\\\\components\\\\posts\\\\PostList.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport Responsive from '../common/Responsive';\nimport SubInfo from '../common/SubInfo';\nimport Tags from '../common/Tags';\nimport { Link } from 'react-router-dom';\nimport GridList from '@material-ui/core/GridList';\nconst PostListBlock = styled(Responsive)`\n  margin-top: 3rem;\n`;\nconst PostItemBlock = styled.div`\n  background-color: #fafafa;\n  margin: 10px;\n  padding: 10px;\n  width: 275px;\n  height: 400px;\n  box-shadow: 2px 2px 2px 2px gray;\n`;\n\nconst PostItem = ({\n  post\n}) => {\n  const publishedDate = post.publishedDate,\n        user = post.user,\n        url = post.url,\n        tags = post.tags,\n        title = post.title,\n        body = post.body,\n        _id = post._id;\n  return React.createElement(PostItemBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: `/@${user.username}/${_id}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, title)), React.createElement(Tags, {\n    tags: tags,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  })), React.createElement(SubInfo, {\n    username: user.username,\n    publishedDate: new Date(publishedDate),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: url,\n    width: \"150px\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }), React.createElement(\"h4\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, body));\n};\n\nconst PostList = ({\n  posts,\n  loading,\n  error,\n  showWriteButton\n}) => {\n  if (error) {\n    return React.createElement(PostListBlock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, \"\\uC5D0\\uB7EC\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\");\n  }\n\n  return React.createElement(React.Fragment, null, !loading && posts && React.createElement(GridList, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, posts.map(post => React.createElement(PostItem, {\n    post: post,\n    key: post._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }))));\n};\n\nexport default PostList;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/vote/Vote/blog-frontend/src/components/posts/PostList.js"],"names":["React","styled","Responsive","SubInfo","Tags","Link","GridList","PostListBlock","PostItemBlock","div","PostItem","post","publishedDate","user","url","tags","title","body","_id","username","Date","PostList","posts","loading","error","showWriteButton","map"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAEA,MAAMC,aAAa,GAAGN,MAAM,CAACC,UAAD,CAAa;;CAAzC;AAIA,MAAMM,aAAa,GAAGP,MAAM,CAACQ,GAAI;;;;;;;CAAjC;;AASA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA,QACrBC,aADqB,GACgCD,IADhC,CACrBC,aADqB;AAAA,QACNC,IADM,GACgCF,IADhC,CACNE,IADM;AAAA,QACAC,GADA,GACgCH,IADhC,CACAG,GADA;AAAA,QACKC,IADL,GACgCJ,IADhC,CACKI,IADL;AAAA,QACWC,KADX,GACgCL,IADhC,CACWK,KADX;AAAA,QACkBC,IADlB,GACgCN,IADhC,CACkBM,IADlB;AAAA,QACwBC,GADxB,GACgCP,IADhC,CACwBO,GADxB;AAE7B,SACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,KAAIL,IAAI,CAACM,QAAS,IAAGD,GAAI,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwCF,KAAxC,CADF,CADF,EAIE,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAED,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,EAQE,oBAAC,OAAD;AACE,IAAA,QAAQ,EAAEF,IAAI,CAACM,QADjB;AAEE,IAAA,aAAa,EAAE,IAAIC,IAAJ,CAASR,aAAT,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,EAYE;AAAK,IAAA,GAAG,EAAEE,GAAV;AAAe,IAAA,KAAK,EAAC,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKG,IAAL,CAdF,CADF;AAkBD,CApBD;;AAsBA,MAAMI,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,OAAT;AAAkBC,EAAAA,KAAlB;AAAyBC,EAAAA;AAAzB,CAAD,KAAgD;AAC/D,MAAID,KAAJ,EAAW;AACT,WAAO,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAAP;AACD;;AACD,SACE,0CACG,CAACD,OAAD,IAAYD,KAAZ,IACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,CAACI,GAAN,CAAUf,IAAI,IACb,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAEA,IAAhB;AAAsB,IAAA,GAAG,EAAEA,IAAI,CAACO,GAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFJ,CADF;AAWD,CAfD;;AAiBA,eAAeG,QAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport SubInfo from '../common/SubInfo';\r\nimport Tags from '../common/Tags';\r\nimport { Link } from 'react-router-dom';\r\nimport GridList from '@material-ui/core/GridList';\r\n\r\nconst PostListBlock = styled(Responsive)`\r\n  margin-top: 3rem;\r\n`;\r\n\r\nconst PostItemBlock = styled.div`\r\n  background-color: #fafafa;\r\n  margin: 10px;\r\n  padding: 10px;\r\n  width: 275px;\r\n  height: 400px;\r\n  box-shadow: 2px 2px 2px 2px gray;\r\n`;\r\n\r\nconst PostItem = ({ post }) => {\r\n  const { publishedDate, user, url, tags, title, body, _id } = post;\r\n  return (\r\n    <PostItemBlock>\r\n      <span>\r\n        <h1>\r\n          <Link to={`/@${user.username}/${_id}`}>{title}</Link>\r\n        </h1>\r\n        <Tags tags={tags} />\r\n      </span>\r\n\r\n      <SubInfo\r\n        username={user.username}\r\n        publishedDate={new Date(publishedDate)}\r\n      />\r\n      <img src={url} width=\"150px\" />\r\n\r\n      <h4>{body}</h4>\r\n    </PostItemBlock>\r\n  );\r\n};\r\n\r\nconst PostList = ({ posts, loading, error, showWriteButton }) => {\r\n  if (error) {\r\n    return <PostListBlock>에러가 발생했습니다.</PostListBlock>;\r\n  }\r\n  return (\r\n    <>\r\n      {!loading && posts && (\r\n        <GridList>\r\n          {posts.map(post => (\r\n            <PostItem post={post} key={post._id} />\r\n          ))}\r\n        </GridList>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"]},"metadata":{},"sourceType":"module"}