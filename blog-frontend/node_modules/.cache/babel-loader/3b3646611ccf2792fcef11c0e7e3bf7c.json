{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\react2\\\\26_post\\\\blog\\\\blog-frontend\\\\src\\\\components\\\\post\\\\PostViewer.js\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport palette from '../../lib/styles/palette';\nimport Responsive from '../common/Responsive';\nconst PostViewerBlock = styled(Responsive)`\n  margin-top: 4rem;\n`;\nconst PostHead = styled.div`\n  border-bottom: 1px solid ${palette.gray[2]};\n  padding-bottom: 3rem;\n  margin-bottom: 3rem;\n  h1 {\n    font-size: 3rem;\n    line-height: 1.5;\n    margin: 0;\n  }\n`;\nconst SubInfo = styled.div`\n  margin-top: 1rem;\n  color: ${palette.gray[6]};\n  span + span:before {\n    color: ${palette.gray[5]};\n    padding-left: 0.25rem;\n    padding-right: 0.25rem;\n    content: '\\\\B7';\n  }\n`;\nconst Tags = styled.div`\n  margin-top: 0.5rem;\n  .tag {\n    display: inline-block;\n    color: ${palette.cyan[7]};\n    text-decoration: none;\n    margin-right: 0.5rem;\n    &:hover {\n      color: ${palette.cyan[6]};\n    }\n  }\n`;\nconst PostContent = styled.div`\n  font-size: 1.3125rem;\n  color: ${palette.gray[8]};\n`;\n\nconst PostViewer = ({\n  post,\n  error,\n  loading\n}) => {\n  if (error) {\n    if (error.response && error.response.status === 404) {\n      return React.createElement(PostViewerBlock, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"\\uC874\\uC7AC\\uD558\\uC9C0 \\uC54A\\uB294 \\uD3EC\\uC2A4\\uD2B8\\uC785\\uB2C8\\uB2E4.\");\n    }\n\n    return React.createElement(PostViewerBlock, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, \"\\uC624\\uB958 \\uBC1C\\uC0DD!\");\n  }\n\n  if (loading || !post) {\n    return null;\n  }\n\n  const title = post.title,\n        body = post.body,\n        user = post.user,\n        publishedDate = post.publishedDate,\n        tags = post.tags;\n  return React.createElement(PostViewerBlock, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(PostHead, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, title), React.createElement(SubInfo, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, user.username)), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, new Date(publishedDate).toLocaleDateString())), React.createElement(Tags, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, tags.map(tag => React.createElement(\"div\", {\n    className: \"tag\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, \"#\", tag)))), React.createElement(PostContent, {\n    dangerouslySetInnerHTML: {\n      __html: '<p>HTML <b>내용<b/>입니다.</p>'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n};\n\nexport default PostViewer;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/react2/26_post/blog/blog-frontend/src/components/post/PostViewer.js"],"names":["React","styled","palette","Responsive","PostViewerBlock","PostHead","div","gray","SubInfo","Tags","cyan","PostContent","PostViewer","post","error","loading","response","status","title","body","user","publishedDate","tags","username","Date","toLocaleDateString","map","tag","__html"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AAEA,MAAMC,eAAe,GAAGH,MAAM,CAACE,UAAD,CAAa;;CAA3C;AAIA,MAAME,QAAQ,GAAGJ,MAAM,CAACK,GAAI;6BACCJ,OAAO,CAACK,IAAR,CAAa,CAAb,CAAgB;;;;;;;;CAD7C;AAWA,MAAMC,OAAO,GAAGP,MAAM,CAACK,GAAI;;WAEhBJ,OAAO,CAACK,IAAR,CAAa,CAAb,CAAgB;;aAEdL,OAAO,CAACK,IAAR,CAAa,CAAb,CAAgB;;;;;CAJ7B;AAWA,MAAME,IAAI,GAAGR,MAAM,CAACK,GAAI;;;;aAIXJ,OAAO,CAACQ,IAAR,CAAa,CAAb,CAAgB;;;;eAIdR,OAAO,CAACQ,IAAR,CAAa,CAAb,CAAgB;;;CAR/B;AAaA,MAAMC,WAAW,GAAGV,MAAM,CAACK,GAAI;;WAEpBJ,OAAO,CAACK,IAAR,CAAa,CAAb,CAAgB;CAF3B;;AAKA,MAAMK,UAAU,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA8B;AAC/C,MAAID,KAAJ,EAAW;AACT,QAAIA,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeC,MAAf,KAA0B,GAAhD,EAAqD;AACnD,aAAO,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uFAAP;AACD;;AACD,WAAO,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAAP;AACD;;AACD,MAAIF,OAAO,IAAI,CAACF,IAAhB,EAAsB;AACpB,WAAO,IAAP;AACD;;AAT8C,QAUvCK,KAVuC,GAUIL,IAVJ,CAUvCK,KAVuC;AAAA,QAUhCC,IAVgC,GAUIN,IAVJ,CAUhCM,IAVgC;AAAA,QAU1BC,IAV0B,GAUIP,IAVJ,CAU1BO,IAV0B;AAAA,QAUpBC,aAVoB,GAUIR,IAVJ,CAUpBQ,aAVoB;AAAA,QAULC,IAVK,GAUIT,IAVJ,CAULS,IAVK;AAW/C,SACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKJ,KAAL,CADF,EAEE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIE,IAAI,CAACG,QAAT,CADF,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAO,IAAIC,IAAJ,CAASH,aAAT,EAAwBI,kBAAxB,EAAP,CAJF,CAFF,EAQE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,IAAI,CAACI,GAAL,CAASC,GAAG,IACX;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAuBA,GAAvB,CADD,CADH,CARF,CADF,EAeE,oBAAC,WAAD;AACE,IAAA,uBAAuB,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAD3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF;AAqBD,CAhCD;;AAkCA,eAAehB,UAAf","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport Responsive from '../common/Responsive';\r\n\r\nconst PostViewerBlock = styled(Responsive)`\r\n  margin-top: 4rem;\r\n`;\r\n\r\nconst PostHead = styled.div`\r\n  border-bottom: 1px solid ${palette.gray[2]};\r\n  padding-bottom: 3rem;\r\n  margin-bottom: 3rem;\r\n  h1 {\r\n    font-size: 3rem;\r\n    line-height: 1.5;\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst SubInfo = styled.div`\r\n  margin-top: 1rem;\r\n  color: ${palette.gray[6]};\r\n  span + span:before {\r\n    color: ${palette.gray[5]};\r\n    padding-left: 0.25rem;\r\n    padding-right: 0.25rem;\r\n    content: '\\\\B7';\r\n  }\r\n`;\r\n\r\nconst Tags = styled.div`\r\n  margin-top: 0.5rem;\r\n  .tag {\r\n    display: inline-block;\r\n    color: ${palette.cyan[7]};\r\n    text-decoration: none;\r\n    margin-right: 0.5rem;\r\n    &:hover {\r\n      color: ${palette.cyan[6]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst PostContent = styled.div`\r\n  font-size: 1.3125rem;\r\n  color: ${palette.gray[8]};\r\n`;\r\n\r\nconst PostViewer = ({ post, error, loading }) => {\r\n  if (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      return <PostViewerBlock>존재하지 않는 포스트입니다.</PostViewerBlock>;\r\n    }\r\n    return <PostViewerBlock>오류 발생!</PostViewerBlock>;\r\n  }\r\n  if (loading || !post) {\r\n    return null;\r\n  }\r\n  const { title, body, user, publishedDate, tags } = post;\r\n  return (\r\n    <PostViewerBlock>\r\n      <PostHead>\r\n        <h1>{title}</h1>\r\n        <SubInfo>\r\n          <span>\r\n            <b>{user.username}</b>\r\n          </span>\r\n          <span>{new Date(publishedDate).toLocaleDateString()}</span>\r\n        </SubInfo>\r\n        <Tags>\r\n          {tags.map(tag => (\r\n            <div className=\"tag\">#{tag}</div>\r\n          ))}\r\n        </Tags>\r\n      </PostHead>\r\n      <PostContent\r\n        dangerouslySetInnerHTML={{ __html: '<p>HTML <b>내용<b/>입니다.</p>' }}\r\n      />\r\n    </PostViewerBlock>\r\n  );\r\n};\r\n\r\nexport default PostViewer;\r\n"]},"metadata":{},"sourceType":"module"}