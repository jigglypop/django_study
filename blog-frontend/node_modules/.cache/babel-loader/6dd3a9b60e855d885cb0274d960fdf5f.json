{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\react2\\\\27_UD\\\\blog\\\\blog-frontend\\\\src\\\\containers\\\\write\\\\WriteActionButtonsContainer.js\";\nimport React, { useEffect } from 'react';\nimport WriteActionButtons from '../../components/write/WriteActionButtons';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { writePost, updatePost } from '../../modules/write';\n\nconst WriteActionButtonsContainer = ({\n  history\n}) => {\n  const dispatch = useDispatch();\n\n  const _useSelector = useSelector(({\n    write\n  }) => ({\n    title: write.title,\n    body: write.body,\n    tags: write.tags,\n    post: write.post,\n    postError: write.postError\n  })),\n        title = _useSelector.title,\n        body = _useSelector.body,\n        tags = _useSelector.tags,\n        post = _useSelector.post,\n        postError = _useSelector.postError;\n\n  const onPublish = () => {\n    dispatch(writePost({\n      title,\n      body,\n      tags\n    }));\n  };\n\n  const onCancel = () => {\n    history.goBack();\n  };\n\n  useEffect(() => {\n    if (post) {\n      const _id = post._id,\n            user = post.user;\n      history.push(`/@${user.username}/${_id}`);\n    }\n\n    if (postError) {\n      console.log(postError);\n    }\n  }, [history, post, postError]);\n  return React.createElement(WriteActionButtons, {\n    onPublish: onPublish,\n    onCancel: onCancel,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  });\n};\n\nexport default withRouter(WriteActionButtonsContainer);","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/react2/27_UD/blog/blog-frontend/src/containers/write/WriteActionButtonsContainer.js"],"names":["React","useEffect","WriteActionButtons","useSelector","useDispatch","withRouter","writePost","updatePost","WriteActionButtonsContainer","history","dispatch","write","title","body","tags","post","postError","onPublish","onCancel","goBack","_id","user","push","username","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,kBAAP,MAA+B,2CAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,qBAAtC;;AAEA,MAAMC,2BAA2B,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AACnD,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;;AADmD,uBAEJD,WAAW,CAAC,CAAC;AAAEQ,IAAAA;AAAF,GAAD,MAAgB;AACzEC,IAAAA,KAAK,EAAED,KAAK,CAACC,KAD4D;AAEzEC,IAAAA,IAAI,EAAEF,KAAK,CAACE,IAF6D;AAGzEC,IAAAA,IAAI,EAAEH,KAAK,CAACG,IAH6D;AAIzEC,IAAAA,IAAI,EAAEJ,KAAK,CAACI,IAJ6D;AAKzEC,IAAAA,SAAS,EAAEL,KAAK,CAACK;AALwD,GAAhB,CAAD,CAFP;AAAA,QAE3CJ,KAF2C,gBAE3CA,KAF2C;AAAA,QAEpCC,IAFoC,gBAEpCA,IAFoC;AAAA,QAE9BC,IAF8B,gBAE9BA,IAF8B;AAAA,QAExBC,IAFwB,gBAExBA,IAFwB;AAAA,QAElBC,SAFkB,gBAElBA,SAFkB;;AAUnD,QAAMC,SAAS,GAAG,MAAM;AACtBP,IAAAA,QAAQ,CACNJ,SAAS,CAAC;AACRM,MAAAA,KADQ;AAERC,MAAAA,IAFQ;AAGRC,MAAAA;AAHQ,KAAD,CADH,CAAR;AAOD,GARD;;AAUA,QAAMI,QAAQ,GAAG,MAAM;AACrBT,IAAAA,OAAO,CAACU,MAAR;AACD,GAFD;;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIc,IAAJ,EAAU;AAAA,YACAK,GADA,GACcL,IADd,CACAK,GADA;AAAA,YACKC,IADL,GACcN,IADd,CACKM,IADL;AAERZ,MAAAA,OAAO,CAACa,IAAR,CAAc,KAAID,IAAI,CAACE,QAAS,IAAGH,GAAI,EAAvC;AACD;;AACD,QAAIJ,SAAJ,EAAe;AACbQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,SAAZ;AACD;AACF,GARQ,EAQN,CAACP,OAAD,EAAUM,IAAV,EAAgBC,SAAhB,CARM,CAAT;AASA,SAAO,oBAAC,kBAAD;AAAoB,IAAA,SAAS,EAAEC,SAA/B;AAA0C,IAAA,QAAQ,EAAEC,QAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACD,CAlCD;;AAoCA,eAAeb,UAAU,CAACG,2BAAD,CAAzB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport WriteActionButtons from '../../components/write/WriteActionButtons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { writePost, updatePost } from '../../modules/write';\r\n\r\nconst WriteActionButtonsContainer = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const { title, body, tags, post, postError } = useSelector(({ write }) => ({\r\n    title: write.title,\r\n    body: write.body,\r\n    tags: write.tags,\r\n    post: write.post,\r\n    postError: write.postError,\r\n  }));\r\n\r\n  const onPublish = () => {\r\n    dispatch(\r\n      writePost({\r\n        title,\r\n        body,\r\n        tags,\r\n      }),\r\n    );\r\n  };\r\n\r\n  const onCancel = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      const { _id, user } = post;\r\n      history.push(`/@${user.username}/${_id}`);\r\n    }\r\n    if (postError) {\r\n      console.log(postError);\r\n    }\r\n  }, [history, post, postError]);\r\n  return <WriteActionButtons onPublish={onPublish} onCancel={onCancel} />;\r\n};\r\n\r\nexport default withRouter(WriteActionButtonsContainer);\r\n"]},"metadata":{},"sourceType":"module"}