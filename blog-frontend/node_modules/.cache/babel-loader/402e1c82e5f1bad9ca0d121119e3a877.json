{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\react2\\\\27_UD\\\\blog\\\\blog-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"C:\\\\Users\\\\multicampus\\\\Desktop\\\\react2\\\\27_UD\\\\blog\\\\blog-frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport { createAction, handleActions } from 'redux-actions';\nimport createRequestSaga, { createRequestActionTypes } from '../lib/createRequestSaga';\nimport * as postsAPI from '../lib/api/posts';\nimport { takeLatest } from 'redux-saga/effects';\nconst INITIALIZE = 'write/INITIALIZE';\nconst CHANGE_FIELD = 'write/CHANGE_FIELD';\n\nconst _createRequestActionT = createRequestActionTypes('write/WRITE_POST'),\n      _createRequestActionT2 = _slicedToArray(_createRequestActionT, 3),\n      WRITE_POST = _createRequestActionT2[0],\n      WRITE_POST_SUCCESS = _createRequestActionT2[1],\n      WRITE_POST_FAILURE = _createRequestActionT2[2];\n\nconst SET_ORIGINAL_POST = 'write/SET_ORIGINAL_POST';\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, post => post);\nexport const initialize = createAction(INITIALIZE);\nexport const changeField = createAction(CHANGE_FIELD, ({\n  key,\n  value\n}) => ({\n  key,\n  value\n}));\nexport const writePost = createAction(WRITE_POST, ({\n  title,\n  body,\n  tags\n}) => ({\n  title,\n  body,\n  tags\n}));\nconst writePostSaga = createRequestSaga(WRITE_POST, postsAPI.writePost);\nexport function* writeSaga() {\n  yield takeLatest(WRITE_POST, writePostSaga);\n}\nconst initialState = {\n  title: '',\n  body: '',\n  tags: [],\n  post: null,\n  postError: null\n};\nconst write = handleActions({\n  [INITIALIZE]: state => initialState,\n  [CHANGE_FIELD]: (state, {\n    payload: {\n      key,\n      value\n    }\n  }) => _objectSpread({}, state, {\n    [key]: value\n  }),\n  [WRITE_POST]: state => _objectSpread({}, state, {\n    post: null,\n    postError: null\n  }),\n  [WRITE_POST_SUCCESS]: (state, {\n    payload: post\n  }) => _objectSpread({}, state, {\n    post\n  }),\n  [WRITE_POST_FAILURE]: (state, {\n    payload: postError\n  }) => _objectSpread({}, state, {\n    postError\n  })\n}, initialState);\nexport default write;","map":{"version":3,"sources":["C:/Users/multicampus/Desktop/react2/27_UD/blog/blog-frontend/src/modules/write.js"],"names":["createAction","handleActions","createRequestSaga","createRequestActionTypes","postsAPI","takeLatest","INITIALIZE","CHANGE_FIELD","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","SET_ORIGINAL_POST","setOriginalPost","post","initialize","changeField","key","value","writePost","title","body","tags","writePostSaga","writeSaga","initialState","postError","write","state","payload"],"mappings":";;AAAA,SAASA,YAAT,EAAuBC,aAAvB,QAA4C,eAA5C;AACA,OAAOC,iBAAP,IACEC,wBADF,QAEO,0BAFP;AAGA,OAAO,KAAKC,QAAZ,MAA0B,kBAA1B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AAEA,MAAMC,UAAU,GAAG,kBAAnB;AACA,MAAMC,YAAY,GAAG,oBAArB;;8BAKIJ,wBAAwB,CAAC,kBAAD,C;;MAH1BK,U;MACAC,kB;MACAC,kB;;AAEF,MAAMC,iBAAiB,GAAG,yBAA1B;AACA,OAAO,MAAMC,eAAe,GAAGZ,YAAY,CAACW,iBAAD,EAAoBE,IAAI,IAAIA,IAA5B,CAApC;AAEP,OAAO,MAAMC,UAAU,GAAGd,YAAY,CAACM,UAAD,CAA/B;AACP,OAAO,MAAMS,WAAW,GAAGf,YAAY,CAACO,YAAD,EAAe,CAAC;AAAES,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAD,MAAqB;AACzED,EAAAA,GADyE;AAEzEC,EAAAA;AAFyE,CAArB,CAAf,CAAhC;AAIP,OAAO,MAAMC,SAAS,GAAGlB,YAAY,CAACQ,UAAD,EAAa,CAAC;AAAEW,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,CAAD,MAA4B;AAC5EF,EAAAA,KAD4E;AAE5EC,EAAAA,IAF4E;AAG5EC,EAAAA;AAH4E,CAA5B,CAAb,CAA9B;AAMP,MAAMC,aAAa,GAAGpB,iBAAiB,CAACM,UAAD,EAAaJ,QAAQ,CAACc,SAAtB,CAAvC;AACA,OAAO,UAAUK,SAAV,GAAsB;AAC3B,QAAMlB,UAAU,CAACG,UAAD,EAAac,aAAb,CAAhB;AACD;AAED,MAAME,YAAY,GAAG;AACnBL,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,IAAI,EAAE,EAFa;AAGnBC,EAAAA,IAAI,EAAE,EAHa;AAInBR,EAAAA,IAAI,EAAE,IAJa;AAKnBY,EAAAA,SAAS,EAAE;AALQ,CAArB;AAQA,MAAMC,KAAK,GAAGzB,aAAa,CACzB;AACE,GAACK,UAAD,GAAcqB,KAAK,IAAIH,YADzB;AAEE,GAACjB,YAAD,GAAgB,CAACoB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAE;AAAEZ,MAAAA,GAAF;AAAOC,MAAAA;AAAP;AAAX,GAAR,uBACXU,KADW;AAEd,KAACX,GAAD,GAAOC;AAFO,IAFlB;AAME,GAACT,UAAD,GAAcmB,KAAK,sBACdA,KADc;AAEjBd,IAAAA,IAAI,EAAE,IAFW;AAGjBY,IAAAA,SAAS,EAAE;AAHM,IANrB;AAWE,GAAChB,kBAAD,GAAsB,CAACkB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEf;AAAX,GAAR,uBACjBc,KADiB;AAEpBd,IAAAA;AAFoB,IAXxB;AAeE,GAACH,kBAAD,GAAsB,CAACiB,KAAD,EAAQ;AAAEC,IAAAA,OAAO,EAAEH;AAAX,GAAR,uBACjBE,KADiB;AAEpBF,IAAAA;AAFoB;AAfxB,CADyB,EAqBzBD,YArByB,CAA3B;AAwBA,eAAeE,KAAf","sourcesContent":["import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as postsAPI from '../lib/api/posts';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\nconst INITIALIZE = 'write/INITIALIZE';\r\nconst CHANGE_FIELD = 'write/CHANGE_FIELD';\r\nconst [\r\n  WRITE_POST,\r\n  WRITE_POST_SUCCESS,\r\n  WRITE_POST_FAILURE,\r\n] = createRequestActionTypes('write/WRITE_POST');\r\nconst SET_ORIGINAL_POST = 'write/SET_ORIGINAL_POST';\r\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, post => post);\r\n\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const writePost = createAction(WRITE_POST, ({ title, body, tags }) => ({\r\n  title,\r\n  body,\r\n  tags,\r\n}));\r\n\r\nconst writePostSaga = createRequestSaga(WRITE_POST, postsAPI.writePost);\r\nexport function* writeSaga() {\r\n  yield takeLatest(WRITE_POST, writePostSaga);\r\n}\r\n\r\nconst initialState = {\r\n  title: '',\r\n  body: '',\r\n  tags: [],\r\n  post: null,\r\n  postError: null,\r\n};\r\n\r\nconst write = handleActions(\r\n  {\r\n    [INITIALIZE]: state => initialState,\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value,\r\n    }),\r\n    [WRITE_POST]: state => ({\r\n      ...state,\r\n      post: null,\r\n      postError: null,\r\n    }),\r\n    [WRITE_POST_SUCCESS]: (state, { payload: post }) => ({\r\n      ...state,\r\n      post,\r\n    }),\r\n    [WRITE_POST_FAILURE]: (state, { payload: postError }) => ({\r\n      ...state,\r\n      postError,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default write;\r\n"]},"metadata":{},"sourceType":"module"}